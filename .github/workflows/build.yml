name: Release Build

on:
  push:
    branches: [ "master" ]
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        arch: [x86_64, arm64]
      fail-fast: false
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4

    - name: Setup toolchain
      run: |
        if [ "${{ matrix.arch }}" = "arm64" ]; then
          sudo apt-get update && sudo apt-get install -y g++-aarch64-linux-gnu
          export CROSSCOMPILER="aarch64-linux-gnu-"
        else
          sudo apt-get install -y g++ make
          export CROSSCOMPILER=""
        fi

    - name: Build binary
      run: |
        make clean
        make CROSSCOMPILER="$CROSSCOMPILER"
        mv plotop plotop-${{ matrix.arch }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: plotop-${{ matrix.arch }}
        path: plotop-${{ matrix.arch }}

    - name: Check artifacts
      run: |
        echo "Artifacts:"
        ls -l plotop-${{ matrix.arch }}

  release:
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.ref }}

    - name: Download Artifact
      uses: actions/download-artifact@v4

    - name: Show files
      run: |
        ls -lh

    - name: Zip files
      run: |
        for arch in x86_64 arm64; do
          zip -r plotop-${{ github.ref_name }}-$arch.zip plotop-$arch
        done
    - name: Create Release and Upload Assets
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ github.ref_name }}
        generate_release_notes: true
        files: |
          plotop-${{ github.ref_name }}-*.zip
