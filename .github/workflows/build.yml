name: Release Build

on:
  push:
    branches: [ "master" ]
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        arch: [x86_64, arm64]
      fail-fast: false
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4

    - name: Setup toolchain
      run: |
        if [ "${{ matrix.arch }}" = "arm64" ]; then
          sudo apt-get update && sudo apt-get install -y g++-aarch64-linux-gnu
          export CROSSCOMPILER="aarch64-linux-gnu-"
        else
          sudo apt-get install -y g++ make
          export CROSSCOMPILER=""
        fi

    - name: Build binary
      run: |
        make clean
        make CROSSCOMPILER="$CROSSCOMPILER"
        mv plotop plotop-${{ matrix.arch }}

    - name: Create Release
      id: create_release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./plotop-${{ matrix.arch }}
        asset_name: plotop-${{ matrix.arch }}
        asset_content_type: application/octet-stream

    - name: Upload Build Artifact
      if: github.ref == 'refs/heads/master'
      uses: actions/upload-artifact@v4
      with:
        name: plotop-${{ matrix.arch }}
        path: plotop-${{ matrix.arch }}
